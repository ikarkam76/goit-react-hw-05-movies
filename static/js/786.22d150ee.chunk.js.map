{"version":3,"file":"static/js/786.22d150ee.chunk.js","mappings":"qQAEaA,EAAYC,EAAAA,EAAAA,IAAH,yLAUTC,EAAgBD,EAAAA,EAAAA,IAAH,+CAIbE,EAAMF,EAAAA,EAAAA,IAAH,iE,SCTHG,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9B,OACE,UAACL,EAAD,YACE,SAACG,EAAD,CACEG,IAAG,yCAAoCD,EAAME,aAC7CC,IAAI,YAEN,UAACN,EAAD,YACE,0BACGG,EAAMI,MADT,KACkBJ,EAAMK,aAAaC,MAAM,EAAG,GAD9C,QAGA,wCAAgBN,EAAMO,iBACtB,uCACA,uBAAIP,EAAMQ,YACV,oCACCR,EAAMS,OAAOC,KAAI,SAAAC,GAAI,OACpB,0CAAsBA,EAAKC,OAAnBD,EAAKE,GADO,SAM7B,ECxBYC,GAAalB,EAAAA,EAAAA,GAAOmB,EAAAA,GAAPnB,CAAH,kRCDVoB,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,SAC1B,OACI,SAACJ,EAAD,CAAYG,GAAIA,EAAhB,SACKC,GAGZ,ECNYC,EAAgBvB,EAAAA,EAAAA,IAAH,yLC8C1B,EAvCqB,WAAO,IAAD,IAClBwB,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAOzC,OAJEC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaC,OAAOV,IAAUW,MAAK,SAAAC,GAAG,OAAIT,EAASS,EAAIC,KAAjB,GACvC,GAAE,CAACb,IAEDpB,GAKH,6BACE,SAACgB,EAAD,CAAUC,GAAIO,EAAd,mCACA,SAACzB,EAAD,CAAeC,MAAOA,KACtB,SAACmB,EAAD,WACE,2BACE,yBACE,SAAC,KAAD,CAAMF,GAAG,OAAOS,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMP,GAAG,UAAUS,MAAO,CAAEC,KAAMH,GAAlC,6BAMN,SAAC,EAAAU,SAAD,WACE,SAAC,KAAD,SAtBG,IA0BV,C","sources":["Components/CardContainer/CardContainer.styled.js","Components/CardContainer/CardContainer.jsx","Components/BackLink/BackLink.styled.js","Components/BackLink/BackLink.jsx","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 20px;\n  margin-top: 20px;\n  background-color: lightgray;\n  border-radius: 4px;\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.4);\n`;\n\n\nexport const InfoContainer = styled.div`\n  padding-left: 40px;\n`;\n\nexport const Img = styled.img`\n  height: 500px;\n  border-radius: 4px;\n`;","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Img,\n  InfoContainer,\n} from 'Components/CardContainer/CardContainer.styled';\n\nexport const CardContainer = ({ movie }) => {\n  return (\n    <Container>\n      <Img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt=\"poster\"\n      />\n      <InfoContainer>\n        <h2>\n          {movie.title} ({movie.release_date.slice(0, 4)})\n        </h2>\n        <p>User score: {movie.vote_average}</p>\n        <h4>Overview:</h4>\n        <p>{movie.overview}</p>\n        <h4>Genres:</h4>\n        {movie.genres.map(item => (\n          <p key={item.id}> ☑️ {item.name}</p>\n        ))}\n      </InfoContainer>\n    </Container>\n  );\n};\n\nCardContainer.propTypes = {\n  movie: PropTypes.object.isRequired,\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\n\nexport const StyledLink = styled(Link)`\n  padding: 8px;\n  background-color: lightgray;\n  border-radius: 4px;\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.4);\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: blue;\n  }\n`;","import { StyledLink } from \"Components/BackLink/BackLink.styled\";\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({to, children}) => {\n    return (\n        <StyledLink to={to}>\n            {children}\n        </StyledLink>\n    )\n}\n\nBackLink.propTypes = {\n    to: PropTypes.object.isRequired,\n    children: PropTypes.string.isRequired,\n}","import styled from '@emotion/styled';\n\n\nexport const LinkContainer = styled.div`\n  display: flex;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: lightgray;\n  border-radius: 4px;\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.4);\n`;","import { Suspense, useEffect, useState } from 'react';\nimport { Link, useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { getMovieByID } from \"Services/getmovies\";\nimport { CardContainer} from 'Components/CardContainer/CardContainer';\nimport { BackLink } from 'Components/BackLink/BackLink';\nimport { LinkContainer } from './MovieDetails.styled';\n\n\n\n\nconst MovieDetails = () => {\n  const {movieId} = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backHref = location.state?.from ?? '/';\n\n  \n    useEffect(() => {\n      getMovieByID(Number(movieId)).then(res => setMovie(res.data));\n    }, [movieId])\n  \n  if (!movie) {\n    return null;\n  } \n\n  return (\n    <main>\n      <BackLink to={backHref}>⬅️ Go back</BackLink>\n      <CardContainer movie={movie} />\n      <LinkContainer>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </LinkContainer>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\nexport default MovieDetails;"],"names":["Container","styled","InfoContainer","Img","CardContainer","movie","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","item","name","id","StyledLink","Link","BackLink","to","children","LinkContainer","movieId","useParams","useState","setMovie","backHref","useLocation","state","from","useEffect","getMovieByID","Number","then","res","data","Suspense"],"sourceRoot":""}